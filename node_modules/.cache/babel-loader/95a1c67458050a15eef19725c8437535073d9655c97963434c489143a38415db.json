{"ast":null,"code":"const observer = new IntersectionObserver(entries => {\n  entries.forEach(entry => {\n    console.log(entry);\n    if (entry.isIntersecting) {\n      entry.target.classList.add('show');\n    } else {\n      entry.target.classList.remove('show');\n    }\n  });\n});\nconst hiddenElements = document.querySelectorAll('.hidden');\nconsole.log(hiddenElements);\nhiddenElements.forEach(el => observer.observe(el));","map":{"version":3,"names":["observer","IntersectionObserver","entries","forEach","entry","console","log","isIntersecting","target","classList","add","remove","hiddenElements","document","querySelectorAll","el","observe"],"sources":["/Users/ysk/Website/arklink-solutions.github.io/src/assets/js/script.js"],"sourcesContent":["const observer = new IntersectionObserver((entries) => {\n    entries.forEach((entry) => {\n    console.log(entry)\n    if(entry.isIntersecting){\n    entry.target.classList.add('show');\n    \n    } else{\n        entry.target.classList.remove('show');\n    }\n    });\n    });\n    \n    const hiddenElements = document.querySelectorAll('.hidden');\n    console.log(hiddenElements);\n    hiddenElements.forEach((el) => observer.observe(el));"],"mappings":"AAAA,MAAMA,QAAQ,GAAG,IAAIC,oBAAoB,CAAEC,OAAO,IAAK;EACnDA,OAAO,CAACC,OAAO,CAAEC,KAAK,IAAK;IAC3BC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;IAClB,IAAGA,KAAK,CAACG,cAAc,EAAC;MACxBH,KAAK,CAACI,MAAM,CAACC,SAAS,CAACC,GAAG,CAAC,MAAM,CAAC;IAElC,CAAC,MAAK;MACFN,KAAK,CAACI,MAAM,CAACC,SAAS,CAACE,MAAM,CAAC,MAAM,CAAC;IACzC;EACA,CAAC,CAAC;AACF,CAAC,CAAC;AAEF,MAAMC,cAAc,GAAGC,QAAQ,CAACC,gBAAgB,CAAC,SAAS,CAAC;AAC3DT,OAAO,CAACC,GAAG,CAACM,cAAc,CAAC;AAC3BA,cAAc,CAACT,OAAO,CAAEY,EAAE,IAAKf,QAAQ,CAACgB,OAAO,CAACD,EAAE,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}